{"ast":null,"code":"var _jsxFileName = \"/home/jeanpaul/Desktop/reactApp/my-app/src/components/AlbumItems/AlbumItems.js\",\n    _s = $RefreshSig$();\n\nimport ReactPaginate from 'react-paginate';\nimport ErrorModal from '../UI/ErrorModal/ErrorModal';\nimport Spinner from '../UI/Spinner/Spinner';\nimport AlbumItem from './AlbumItem/AlbumItem';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from './AlbumItems.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlbulmItems = props => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [isDataAvailable, setIsDataAvailable] = useState(true);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const albumPerPage = 9;\n  const pagesVisited = pageNumber * albumPerPage;\n  const pageCount = Math.ceil(data.length / albumPerPage);\n  const displayAlbums = data.slice(pagesVisited, pagesVisited + albumPerPage).map(album => {\n    return /*#__PURE__*/_jsxDEV(AlbumItem, {\n      title: album.title,\n      url: album.thumbnailUrl\n    }, album.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  });\n\n  const removeError = () => {\n    setIsDataAvailable(true);\n  };\n\n  const changePage = ({\n    selected\n  }) => {\n    setPageNumber(selected);\n  };\n\n  useEffect(() => {\n    if (!props.albumId) return;\n    setShowSpinner(true);\n\n    const fetchData = async () => {\n      const res = await axios({\n        method: 'GET',\n        url: `https://jsonplaceholder.typicode.com/albums/${props.albumId}/photos`\n      });\n      setShowSpinner(false);\n\n      if (!res.data.length) {\n        setIsDataAvailable(false);\n      }\n\n      setData(res.data.data);\n    };\n\n    fetchData();\n  }, [props.albumId]);\n  return [showSpinner && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 20\n  }, this), data.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['album-container'],\n      children: displayAlbums\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.paginationContainer,\n      children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: 'Prev',\n        nextLabel: 'Next',\n        pageCount: pageCount,\n        onPageChange: changePage,\n        containerClassName: styles.paginationBttns,\n        activeClassName: styles.paginationActive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this) : !isDataAvailable && /*#__PURE__*/_jsxDEV(ErrorModal, {\n    onRemoveErrorModal: removeError,\n    title: \"Invalid ID\",\n    message: \"No photos of given album ID, use 0< IDs <100\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this)];\n};\n\n_s(AlbulmItems, \"hfD6G7Hcn98NXampuI54LbJHSu4=\");\n\n_c = AlbulmItems;\nexport default AlbulmItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbulmItems\");","map":{"version":3,"sources":["/home/jeanpaul/Desktop/reactApp/my-app/src/components/AlbumItems/AlbumItems.js"],"names":["ReactPaginate","ErrorModal","Spinner","AlbumItem","React","useState","useEffect","axios","styles","AlbulmItems","props","data","setData","pageNumber","setPageNumber","isDataAvailable","setIsDataAvailable","showSpinner","setShowSpinner","albumPerPage","pagesVisited","pageCount","Math","ceil","length","displayAlbums","slice","map","album","title","thumbnailUrl","id","removeError","changePage","selected","albumId","fetchData","res","method","url","paginationContainer","paginationBttns","paginationActive"],"mappings":"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","sourcesContent":["import ReactPaginate from 'react-paginate';\n\nimport ErrorModal from '../UI/ErrorModal/ErrorModal';\nimport Spinner from '../UI/Spinner/Spinner';\nimport AlbumItem from './AlbumItem/AlbumItem';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport styles from './AlbumItems.module.css';\n\nconst AlbulmItems = (props) => {\n  const [data, setData] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [isDataAvailable, setIsDataAvailable] = useState(true);\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  const albumPerPage = 9;\n  const pagesVisited = pageNumber * albumPerPage;\n  const pageCount = Math.ceil(data.length / albumPerPage);\n\n  const displayAlbums = data\n    .slice(pagesVisited, pagesVisited + albumPerPage)\n    .map((album) => {\n      return (\n        <AlbumItem\n          key={album.id}\n          title={album.title}\n          url={album.thumbnailUrl}\n        />\n      );\n    });\n\n  const removeError = () => {\n    setIsDataAvailable(true);\n  };\n\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n\n  useEffect(() => {\n    if (!props.albumId) return;\n    setShowSpinner(true);\n    const fetchData = async () => {\n      const res = await axios({\n        method: 'GET',\n        url:`https://jsonplaceholder.typicode.com/albums/${props.albumId}/photos`\n        \n      });\n      setShowSpinner(false);\n      if (!res.data.length) {\n        setIsDataAvailable(false);\n      }\n\n      setData(res.data.data);\n    };\n    fetchData();\n  }, [props.albumId]);\n\n  return [\n    showSpinner && <Spinner />,\n    data.length ? (\n      <React.Fragment>\n        <div className={styles['album-container']}>{displayAlbums}</div>\n        <div className={styles.paginationContainer}>\n          <ReactPaginate\n            previousLabel={'Prev'}\n            nextLabel={'Next'}\n            pageCount={pageCount}\n            onPageChange={changePage}\n            containerClassName={styles.paginationBttns}\n            activeClassName={styles.paginationActive}\n          />\n        </div>\n      </React.Fragment>\n    ) : (\n      !isDataAvailable && (\n        <ErrorModal\n          onRemoveErrorModal={removeError}\n          title=\"Invalid ID\"\n          message=\"No photos of given album ID, use 0< IDs <100\"\n        />\n      )\n    ),\n  ];\n};\n\nexport default AlbulmItems;\n"]},"metadata":{},"sourceType":"module"}